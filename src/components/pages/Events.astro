---
import type { MDXInstance } from "astro";
import type { Frontmatter } from "@layouts/Layout.astro";
import If from "@components/utils/If.astro";

interface eventInformation {
  date: Date;
  title: string;
  href: string;
}

const allEventsList = [
  await Astro.glob<MDXInstance<Frontmatter>>("/src/pages/events/*/index.{md,mdx}"),
  await Astro.glob<MDXInstance<Frontmatter>>("/src/pages/events/*.{md,mdx}"),
].flat().flatMap((instance) => {
  const dateMatch = instance.file.match(/\/([0-9]{4}-[0-9]{2}-[0-9]{2})[^/]*(?:\/index)?\.mdx?$/);
  if (dateMatch !== null)
    return {
      date: new Date(dateMatch[1]),
      title: instance.frontmatter.title.replace(/^[0-9]{4}([/-])[0-9]{1,2}\1[0-9]{1,2}\s*/, ""),
      href: instance.url,
    };
  else
    return [];
})

const eventsList = allEventsList.filter((eventInfo) =>
  Math.abs(Math.floor((eventInfo.date.getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24))) < 180
);
eventsList.sort((a, b) => b.date.getTime() - a.date.getTime());
---

<If cond={eventsList.length > 0}>
<h2>説明会情報</h2>

<ul class="date_list">
  {
    eventsList.map(({ date, title, href }) => (
      <li>
        <span class="date">{date.toISOString().split("T")[0]}</span>
        <span><a href={href}>{title}</a></span>
      </li>
    ))
  }
</ul>

<style lang="scss">
  @import "@styles/color.scss";

  .date {
    display: inline-block;
    width: 6rem;
    color: $heading-color;
    margin-left: -1rem;
    margin-right: 5px;
    font-weight: bold;
  }
</style>
</If>
