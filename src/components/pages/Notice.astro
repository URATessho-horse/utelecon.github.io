---
import notices from "@data/notice.yml";
import type { Notice } from "@data/schemas/notice";
import Markdown from "@components/utils/Markdown.astro";
import type { Lang } from "@components/types";

/**
 * `Markdown`の利用例として紹介されています．
 * このコンポーネントを利用しなくなる場合は，`src/components/README.md`を編集して，
 * 別の利用例を紹介するようにしてください．
 *
 * 利用ページ：
 * - https://utelecon.adm.u-tokyo.ac.jp/
 * - https://utelecon.adm.u-tokyo.ac.jp/notice/
 */

export async function hash(content: string): Promise<string> {
  const hashed = await crypto.subtle.digest("SHA-1", Buffer.from(content));
  return Buffer.from(hashed).toString("base64url");
}

export interface Props {
  lang: Lang;
  strip?: boolean;
}

interface NoticeContent {
  date: Date;
  content: string;
  id: string;
}

const { lang, strip } = Astro.props;

const contents: NoticeContent[] = [];

for (const notice of notices) {
  const content = notice.content[lang] ?? notice.content.ja;
  if (!content) continue;
  const id = await hash(content);

  if (!strip || contents.length < (notice.important ? 8 : 4)) {
    contents.push({ date: notice.date, content, id });
  }
}
---

<ul>
  {
    contents.map(({ date, content, id }) => (
      <li {id}>
        <span class="date">{date.toLocaleDateString("ja-JP")}</span>
        <Markdown content={content} />
      </li>
    ))
  }
</ul>

<style lang="scss">
  @import "@styles/color.scss";

  .date {
    color: $heading-color;
  }
</style>
