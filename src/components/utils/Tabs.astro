---
import type { Step } from "@components/types";
import type { Key } from "./tabs";

interface Props {
  step: Step;
  tabs: Partial<Record<Key, string>>;
}

const { step, tabs } = Astro.props;

// `<button {...buttonProps("select")} />` がなぜかparse errorを吐くので，対策……
const buttonProps = Object.fromEntries<
  astroHTML.JSX.IntrinsicElements["button"]
>(
  ["select", "ms_auth", "auth_app", "phone", "fido"].map((key) => [
    key,
    {
      id: `${step}-tab-${key}`,
      type: "button",
      role: "tab",
      "aria-controls": `${step}-panel-${key}`,
      "aria-selected": "false",
      class: "tab",
    },
  ])
);
const panelProps = Object.fromEntries<astroHTML.JSX.IntrinsicElements["div"]>(
  ["select", "ms_auth", "auth_app", "phone", "fido"].map((key) => [
    key,
    {
      id: `${step}-panel-${key}`,
      role: "tabpanel",
      "aria-labelledby": `${step}-tab-${key}`,
      hidden: true,
    },
  ])
);
---

<div class="button-list">
  {tabs.select && <button {...buttonProps.select}>{tabs.select}</button>}
  {tabs.ms_auth && <button {...buttonProps.ms_auth}>{tabs.ms_auth}</button>}
  {tabs.auth_app && <button {...buttonProps.auth_app}>{tabs.auth_app}</button>}
  {tabs.phone && <button {...buttonProps.phone}>{tabs.phone}</button>}
  {tabs.fido && <button {...buttonProps.fido}>{tabs.fido}</button>}
</div>
<div class="panel-list">
  {
    /* prettier-ignore */ tabs.select && <div {...panelProps.select}><slot name="select" /></div>
  }
  {
    /* prettier-ignore */ tabs.ms_auth && <div {...panelProps.ms_auth}><slot name="ms_auth" /></div>
  }
  {
    /* prettier-ignore */ tabs.auth_app && <div {...panelProps.auth_app}><slot name="auth_app" /></div>
  }
  {
    /* prettier-ignore */ tabs.phone && <div {...panelProps.phone}><slot name="phone" /></div>
  }
  {
    /* prettier-ignore */ tabs.fido && <div {...panelProps.fido}><slot name="fido" /></div>
  }
</div>

<script src="./tabs.ts"></script>

<style lang="scss">
  @import "@styles/color.scss";

  .button-list {
    display: flex;
  }
  .panel-list {
    padding: 0.5rem;
    border: 1px solid #ccc;
  }
  button.tab {
    display: block;
    flex: 1;
    background-color: $white-gray-dark;
    border: none;
    outline: none;
    box-shadow: none;

    &[aria-selected="true"] {
      background-color: $white-gray-light;
    }
  }
</style>
