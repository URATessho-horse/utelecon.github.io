---
import { SEO } from "astro-seo";
import { GoogleAnalytics } from "@astrolib/analytics";
import Header from "@components/Header/index.astro";
import Footer from "@components/Footer/index.astro";
import Toc from "@components/Toc/index.astro";
import "@styles/global.scss";
import type { MarkdownHeading } from "astro";

interface Props {
  frontmatter: Frontmatter;
  headings: MarkdownHeading[];
}

export interface Frontmatter {
  title: string;
  description?: string;
  lang: "ja" | "en";
  toc?: boolean;
  h1?: string;
  top?: boolean;
  support?: boolean;
  sitemap?: boolean;
  redirect_to?: string;
}

function createDefaultDescription(): string {
  return "";
}

function getDefaultLang(): "ja" | "en" {
  return Astro.url.pathname.startsWith("/en") ? "en" : "ja";
}

const { frontmatter, headings } = Astro.props;
const {
  title = "utelecon",
  description = createDefaultDescription(),
  lang = getDefaultLang(),
  toc = true,
  h1,
  top,
  support,
} = frontmatter;

const htmlAttributes = {
  en: {
    lang: "en",
    class: "en",
  },
  ja: {
    lang: "ja",
  },
}[lang];

const locale = {
  en: "en_US",
  ja: "ja_JP",
}[lang];

const siteName = "utelecon";
const ogImage = "/assets/images/ogp.png";
const gaid = "";
---

<!DOCTYPE html>
<html {...htmlAttributes}>
  <head>
    <SEO
      description={description}
      charset="UTF-8"
      openGraph={{
        basic: {
          title,
          type: "website",
          url: Astro.url.href,
          image: ogImage,
        },
        optional: {
          description,
          locale,
          siteName,
        },
        image: {
          alt: "utelecon",
        },
      }}
      twitter={{
        title,
        description,
      }}
    />

    <GoogleAnalytics id={gaid} partytown />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#157878" />
    <meta
      name="apple-mobile-web-app-status-bar-style"
      content="black-translucent"
    />

    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <Header lang={lang} top={top} />
    <main id="content">
      {!top && <h1 class="title">{h1 ?? title}</h1>}
      {
        !top && toc && headings.length > 0 && (
          <Toc headings={headings} lang={lang} />
        )
      }
      <slot />
    </main>
    <Footer lang={lang} support={support} />
  </body>
</html>
